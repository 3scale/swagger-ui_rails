diff --git a/src/main/coffeescript/view/OperationView.coffee b/src/main/coffeescript/view/OperationView.coffee
index 631b62e..ab045f3 100644
--- a/src/main/coffeescript/view/OperationView.coffee
+++ b/src/main/coffeescript/view/OperationView.coffee
@@ -62,7 +62,7 @@ class OperationView extends Backbone.View
         sampleJSON: @model.responseSampleJSON
         isParam: false
         signature: @model.responseClassSignature
-        
+
       responseSignatureView = new SignatureView({model: signatureModel, tagName: 'div'})
       $('.model-signature', $(@el)).append responseSignatureView.render().el
     else
@@ -102,7 +102,7 @@ class OperationView extends Backbone.View
     # Render status codes
     statusCodeView = new StatusCodeView({model: statusCode, tagName: 'tr'})
     $('.operation-status', $(@el)).append statusCodeView.render().el
-  
+
   submitOperation: (e) ->
     e?.preventDefault()
     # Check for errors
@@ -133,7 +133,7 @@ class OperationView extends Backbone.View
         if(o.value? && jQuery.trim(o.value).length > 0)
           map["body"] = o.value
 
-      for o in form.find("select") 
+      for o in form.find("select")
         val = this.getSelectedValue o
         if(val? && jQuery.trim(val).length > 0)
           map[o.name] = val
@@ -179,68 +179,52 @@ class OperationView extends Backbone.View
         bodyParam.append($(el).attr('name'), el.files[0])
         params += 1
 
-    @invocationUrl = 
+    @invocationUrl =
       if @model.supportHeaderParams()
         headerParams = @model.getHeaderParams(map)
         @model.urlify(map, false)
       else
         @model.urlify(map, true)
 
-    $(".request_url", $(@el)).html("<pre></pre>") 
-    $(".request_url pre", $(@el)).text(@invocationUrl);
-    
-    obj = 
-      type: @model.method
+    $(".request_url", $(@el)).html("<pre></pre>")
+    $(".request_url pre", $(@el)).text(@invocationUrl)
+
+    obj =
+      method: @model.method || 'POST'
       url: @invocationUrl
       headers: headerParams
-      data: bodyParam
+      body: bodyParam
       dataType: 'json'
       contentType: false
       processData: false
+
+    obj.on =
       error: (data, textStatus, error) =>
-        @showErrorStatus(@wrap(data), @)
-      success: (data) =>
+        @showErrorStatus(data, @)
+      response: (data) =>
         @showResponse(data, @)
-      complete: (data) =>
-        @showCompleteStatus(@wrap(data), @)
+        @showCompleteStatus(data, @)
 
     # apply authorizations
     if window.authorizations
       window.authorizations.apply obj
 
     if params is 0
-      obj.data.append("fake", "true");
+      obj.data.append("fake", "true")
 
-    jQuery.ajax(obj)
+    obj.useJQuery = true
+
+    new SwaggerHttp().execute(obj)
     false
     # end of file-upload nastiness
 
-  # wraps a jquery response as a shred response
-
-  wrap: (data) ->
-    headers = {}
-    headerArray = data.getAllResponseHeaders().split("\r")
-    for i in headerArray
-      h = i.split(':')
-      if (h[0] != undefined && h[1] != undefined)
-        headers[h[0].trim()] = h[1].trim()
-
-    o = {}
-    o.content = {}
-    o.content.data = data.responseText
-    o.headers = headers
-    o.request = {}
-    o.request.url = @invocationUrl
-    o.status = data.status
-    o
-
   getSelectedValue: (select) ->
-    if !select.multiple 
+    if !select.multiple
       select.value
     else
       options = []
       options.push opt.value for opt in select.options when opt.selected
-      if options.length > 0 
+      if options.length > 0
         options.join ","
       else
         null
@@ -251,7 +235,6 @@ class OperationView extends Backbone.View
     $(".response", $(@el)).slideUp()
     $(".response_hider", $(@el)).fadeOut()
 
-
   # Show response from server
   showResponse: (response) ->
     prettyJson = JSON.stringify(response, null, "\t").replace(/\n/g, "<br>")
@@ -276,7 +259,7 @@ class OperationView extends Backbone.View
     lines = xml.split('\n')
     indent = 0
     lastType = 'other'
-    # 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions 
+    # 4 types of tags - single, closing, opening, other (text, doctype, comment) - 4*4 = 16 transitions
     transitions =
       'single->single': 0
       'single->closing': -1
@@ -320,9 +303,8 @@ class OperationView extends Backbone.View
           formatted = formatted.substr(0, formatted.length - 1) + ln + '\n'
         else
           formatted += padding + ln + '\n'
-      
+
     formatted
-    
 
   # puts the response data in UI
   showStatus: (response) ->
@@ -357,7 +339,7 @@ class OperationView extends Backbone.View
       pre = $('<pre class="json" />').append(code)
 
     response_body = pre
-    $(".request_url", $(@el)).html("<pre></pre>") 
+    $(".request_url", $(@el)).html("<pre></pre>")
     $(".request_url pre", $(@el)).text(url);
     $(".response_code", $(@el)).html "<pre>" + response.status + "</pre>"
     $(".response_body", $(@el)).html response_body
